// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.AlumnoMatriculaAsignatura", b =>
                {
                    b.Property<int>("AlumnoIdFk")
                        .HasColumnType("int");

                    b.Property<int>("AsignaturaIdFk")
                        .HasColumnType("int");

                    b.Property<int>("CursoEscolarIdFk")
                        .HasColumnType("int");

                    b.HasKey("AlumnoIdFk", "AsignaturaIdFk", "CursoEscolarIdFk");

                    b.HasIndex("AsignaturaIdFk");

                    b.HasIndex("CursoEscolarIdFk");

                    b.ToTable("alumnoMatriculaAsignatura", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Asignatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("Creditos")
                        .HasMaxLength(125)
                        .HasColumnType("float");

                    b.Property<sbyte>("Cuatrimestre")
                        .HasColumnType("tinyint");

                    b.Property<sbyte>("Curso")
                        .HasColumnType("tinyint");

                    b.Property<int>("GradoIdFk")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int?>("ProfesorIdFk")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex("GradoIdFk");

                    b.HasIndex("ProfesorIdFk");

                    b.ToTable("asignatura", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.CursoEscolar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnhoFin")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("AnhoInicio")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cursoEscolar", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("departamento", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Grado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("grado", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Apellido2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasMaxLength(10)
                        .HasColumnType("date");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("sexo")
                        .HasAnnotation("EnumDisplayFormat", "{0}");

                    b.Property<string>("Telefono")
                        .HasMaxLength(9)
                        .HasColumnType("varchar");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tipo")
                        .HasAnnotation("EnumDisplayFormat", "{0}");

                    b.HasKey("Id");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.Property<int>("DepartamentoIdFk")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorIdFk")
                        .HasColumnType("int");

                    b.HasKey("DepartamentoIdFk", "ProfesorIdFk");

                    b.HasIndex("ProfesorIdFk");

                    b.ToTable("profesor", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.AlumnoMatriculaAsignatura", b =>
                {
                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("AlumnoMatriculaAsignaturas")
                        .HasForeignKey("AlumnoIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Asignatura", "Asignatura")
                        .WithMany("AlumnoMatriculaAsignaturas")
                        .HasForeignKey("AsignaturaIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.CursoEscolar", "CursoEscolar")
                        .WithMany("AlumnoMatriculaAsignaturas")
                        .HasForeignKey("CursoEscolarIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignatura");

                    b.Navigation("CursoEscolar");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.Entities.Asignatura", b =>
                {
                    b.HasOne("Dominio.Entities.Grado", "Grado")
                        .WithMany("Asignaturas")
                        .HasForeignKey("GradoIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("Asignaturas")
                        .HasForeignKey("ProfesorIdFk");

                    b.Navigation("Grado");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.Entities.Profesor", b =>
                {
                    b.HasOne("Dominio.Entities.Departamento", "Departamento")
                        .WithMany("Profesores")
                        .HasForeignKey("DepartamentoIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Persona", "Persona")
                        .WithMany("Profesores")
                        .HasForeignKey("ProfesorIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.Entities.Asignatura", b =>
                {
                    b.Navigation("AlumnoMatriculaAsignaturas");
                });

            modelBuilder.Entity("Dominio.Entities.CursoEscolar", b =>
                {
                    b.Navigation("AlumnoMatriculaAsignaturas");
                });

            modelBuilder.Entity("Dominio.Entities.Departamento", b =>
                {
                    b.Navigation("Profesores");
                });

            modelBuilder.Entity("Dominio.Entities.Grado", b =>
                {
                    b.Navigation("Asignaturas");
                });

            modelBuilder.Entity("Dominio.Entities.Persona", b =>
                {
                    b.Navigation("AlumnoMatriculaAsignaturas");

                    b.Navigation("Asignaturas");

                    b.Navigation("Profesores");
                });
#pragma warning restore 612, 618
        }
    }
}
